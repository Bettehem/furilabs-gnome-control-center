From: Matthijs Velsink <mvelsink@gnome.org>
Date: Wed, 3 Apr 2024 02:36:07 +0200
Subject: network: Add stable-ssid support for cloned-mac

NetworkManager 1.46.0 added support for "stable-ssid" for cloned mac,
which generates a stable MAC address based on SSID for each network.

This got accepted as the new default for Fedora 40, see
https://fedoraproject.org/wiki/Changes/StableSSIDMACAddress and
https://pagure.io/fesco/issue/3135.

However, there is no support for the connection editor for this value,
meaning if "stable-ssid" is set, changes to a WiFi network can't be
applied.

Fix this by adding support for "stable-ssid". Essentially based on
network-manager-applet!143
(network-manager-applet@202149c0843510a944afe2257cf56fbb7b4d2ef9).

Closes #2852

(cherry picked from commit 8b8f0645dbcbc65aa3726435d8d593876d0b1b0d)

Origin: future 46.1
---
 .../network/connection-editor/ce-page-ethernet.c   |  2 +-
 panels/network/connection-editor/ce-page-wifi.c    |  2 +-
 panels/network/connection-editor/ce-page.c         | 22 ++++++++++++++++------
 panels/network/connection-editor/ce-page.h         |  3 ++-
 4 files changed, 20 insertions(+), 9 deletions(-)

diff --git a/panels/network/connection-editor/ce-page-ethernet.c b/panels/network/connection-editor/ce-page-ethernet.c
index 906a2e3..13036cf 100644
--- a/panels/network/connection-editor/ce-page-ethernet.c
+++ b/panels/network/connection-editor/ce-page-ethernet.c
@@ -96,7 +96,7 @@ connect_ethernet_page (CEPageEthernet *self)
 
         /* Cloned MAC address */
         cloned_mac = nm_setting_wired_get_cloned_mac_address (setting);
-        ce_page_setup_cloned_mac_combo (self->cloned_mac_combo, cloned_mac);
+        ce_page_setup_cloned_mac_combo (self->cloned_mac_combo, cloned_mac, FALSE);
         g_signal_connect_object (self->cloned_mac_combo, "changed", G_CALLBACK (ce_page_changed), self, G_CONNECT_SWAPPED);
 
         /* MTU */
diff --git a/panels/network/connection-editor/ce-page-wifi.c b/panels/network/connection-editor/ce-page-wifi.c
index 538525f..f442e31 100644
--- a/panels/network/connection-editor/ce-page-wifi.c
+++ b/panels/network/connection-editor/ce-page-wifi.c
@@ -88,7 +88,7 @@ connect_wifi_page (CEPageWifi *self)
         g_signal_connect_object (self->mac_combo, "changed", G_CALLBACK (ce_page_changed), self, G_CONNECT_SWAPPED);
 
         cloned_mac = nm_setting_wireless_get_cloned_mac_address (self->setting);
-        ce_page_setup_cloned_mac_combo (self->cloned_mac_combo, cloned_mac);
+        ce_page_setup_cloned_mac_combo (self->cloned_mac_combo, cloned_mac, TRUE);
         g_signal_connect_object (self->cloned_mac_combo, "changed", G_CALLBACK (ce_page_changed), self, G_CONNECT_SWAPPED);
 }
 
diff --git a/panels/network/connection-editor/ce-page.c b/panels/network/connection-editor/ce-page.c
index b6f0779..534ff5f 100644
--- a/panels/network/connection-editor/ce-page.c
+++ b/panels/network/connection-editor/ce-page.c
@@ -228,14 +228,24 @@ ce_page_trim_address (const gchar *addr)
 }
 
 void
-ce_page_setup_cloned_mac_combo (GtkComboBoxText *combo, const char *current)
+ce_page_setup_cloned_mac_combo (GtkComboBoxText *combo, const char *current, gboolean is_wifi)
 {
        GtkWidget *entry;
-       static const char *entries[][2] = { { "preserve",  N_("Preserve") },
-                                           { "permanent", N_("Permanent") },
-                                           { "random",    N_("Random") },
-                                           { "stable",    N_("Stable") } };
+       static const char *entries_wired[][2] = { { "preserve",  N_("Preserve") },
+                                                 { "permanent", N_("Permanent") },
+                                                 { "random",    N_("Random") },
+                                                 { "stable",    N_("Stable") } };
+       static const char *entries_wifi[][2] = { { "preserve",    N_("Preserve") },
+                                                { "permanent",   N_("Permanent") },
+                                                { "random",      N_("Random") },
+                                                { "stable",      N_("Stable") },
+#if NM_CHECK_VERSION(1, 46, 0)
+                                                { "stable-ssid", N_("Stable per SSID") }
+#endif
+                                              };
        int i, active = -1;
+       const char *(*entries)[2] = is_wifi ? entries_wifi : entries_wired;
+       gsize n_entries = is_wifi ? G_N_ELEMENTS (entries_wifi) : G_N_ELEMENTS (entries_wired);
 
        gtk_widget_set_tooltip_text (GTK_WIDGET (combo),
                _("The MAC address entered here will be used as hardware address for "
@@ -244,7 +254,7 @@ ce_page_setup_cloned_mac_combo (GtkComboBoxText *combo, const char *current)
 
        gtk_combo_box_text_remove_all (combo);
 
-       for (i = 0; i < G_N_ELEMENTS (entries); i++) {
+       for (i = 0; i < n_entries; i++) {
                gtk_combo_box_text_append (combo, entries[i][0], _(entries[i][1]));
                if (g_strcmp0 (current, entries[i][0]) == 0)
                        active = i;
diff --git a/panels/network/connection-editor/ce-page.h b/panels/network/connection-editor/ce-page.h
index a180afb..570ce87 100644
--- a/panels/network/connection-editor/ce-page.h
+++ b/panels/network/connection-editor/ce-page.h
@@ -59,7 +59,8 @@ void         ce_page_setup_mac_combo (GtkComboBoxText  *combo,
                                       const gchar      *current_mac,
                                       gchar           **mac_list);
 void         ce_page_setup_cloned_mac_combo (GtkComboBoxText *combo,
-                                             const char      *current);
+                                             const char      *current,
+                                             gboolean         is_wifi);
 gint         ce_get_property_default (NMSetting        *setting,
                                       const gchar      *property_name);
 gboolean     ce_page_address_is_valid (const gchar *addr);
